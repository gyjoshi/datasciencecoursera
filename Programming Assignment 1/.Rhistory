q()
x<-(3:6)
x
pollutantmean <- function(directory, pollutant, id = 1:332) {
  ## 'directory' is a character vector of length 1 indicating
  ## the location of the CSV files
  ## 'pollutant' is a character vector of length 1 indicating
  ## the name of the pollutant for which we will calculate the
  ## mean; either "sulfate" or "nitrate".
  ## 'id' is an integer vector indicating the monitor ID numbers
  ## to be used
  ## Return the mean of the pollutant across all monitors list
  ## in the 'id' vector (ignoring NA values)
  allFiles <- list.files(path = directory, full.names = TRUE)
  selectedData <- data.frame()
  for (i in id) {
    selectedData <- rbind(selectedData, read.csv(allFiles[i]))
  }
  if (pollutant == 'sulfate') {
    mean(selectedData$sulfate, na.rm = TRUE)
  } else if (pollutant == 'nitrate') {
    mean(selectedData$nitrate, na.rm = TRUE)
  }
}
source("pollutantmean.R")
pollutantmean("D:\DataScienceRepo\datasciencecoursera\Programming Assignment 1\rprog-data-specdata\specdata", "sulfate", 1:10)
pollutantmean("D:\\DataScienceRepo\\datasciencecoursera\\Programming Assignment 1\\rprog-data-specdata\\specdata", "sulfate", 1:10)
pollutantmean("D:\\DataScienceRepo\\datasciencecoursera\\Programming Assignment 1\\rprog-data-specdata\\specdata", "nitrate", 70:72)
pollutantmean("D:\\DataScienceRepo\\datasciencecoursera\\Programming Assignment 1\\rprog-data-specdata\\specdata", "sulfate", 34)
pollutantmean("D:\\DataScienceRepo\\datasciencecoursera\\Programming Assignment 1\\rprog-data-specdata\\specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
source("complete.R")
source("complete.R")
cc <- complete("\\rprog-data-specdata\\specdata", c(6, 10, 20, 34, 100, 200, 310))
cc <- complete("D:\\DataScienceRepo\\datasciencecoursera\\Programming Assignment 1\\rprog-data-specdata\\specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("D:\\DataScienceRepo\\datasciencecoursera\\Programming Assignment 1\\rprog-data-specdata\\specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("D:\\DataScienceRepo\\datasciencecoursera\\Programming Assignment 1\\rprog-data-specdata\\specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
source("corr.R")
cr <- corr("D:\\DataScienceRepo\\datasciencecoursera\\Programming Assignment 1\\rprog-data-specdata\\specdata")
cr <- sort(cr)
set.seed(868)                
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("D:\\DataScienceRepo\\datasciencecoursera\\Programming Assignment 1\\rprog-data-specdata\\specdata",129)
cr <- sort(cr)                
n <- length(cr)                
set.seed(197)                
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("D:\\DataScienceRepo\\datasciencecoursera\\Programming Assignment 1\\rprog-data-specdata\\specdata",2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- corr("D:\\DataScienceRepo\\datasciencecoursera\\Programming Assignment 1\\rprog-data-specdata\\specdata",2000)
n <- length(cr)
cr <- corr("D:\\DataScienceRepo\\datasciencecoursera\\Programming Assignment 1\\rprog-data-specdata\\specdata",1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
##Function “cacheSolve”. This function computes the inverse of the special "matrix" returned by makeCacheMatrix above. 
q()
